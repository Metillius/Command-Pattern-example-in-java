import java.sql.SQLOutput;
import java.util.Scanner;

interface Command{
    public void Leviosa();
    public void Descendo();
    public void Accio();
    public void Depulso();
 //   public void Undo();
}


class SpellCommand implements Command{





    public void Leviosa(){
        System.out.println("Leviosa!");




    }
    public void Descendo(){
        System.out.println("Descendo!");




    }
    public void Accio(){
        System.out.println("Accio!");




    }
    public void Depulso(){
        System.out.println("Depulso!");




    }

 /*   public void Undo(){}

    private char Undo(String spell){
        switch (spell){
            case "Leviosa": return "Descendo";
            case "Descendo": return "Leviosa";
            case "Accio": return "Depulso";
            case "Depulso": return "Accio";
            default: return " ";



        }
    }    */

    private MagicalCube _magicalCube;
    private String spell;


}

class MagicalCube{

    public MagicalCube(){current_state = "stands still"; }

    public void moveUp(){
        System.out.println("The cube moved up!");
        current_state = "moved up";
    }

    public void moveDown(){
        System.out.println("The cube moved down!");
        current_state = "moved down";
    }

    public void moveNear(){
        System.out.println("The cube came near!");
        current_state = "came near";
    }

    public void moveAway(){
        System.out.println("The cube is sent far away!");
        current_state = "is sent far away";
    }




    private String current_state;
}


//Invoker
class Wand {
    public Wand(){current_state = "stands still"; }

    public String returningSpell;

    public String activateSpell(int willCast){

            switch (willCast) {
                case 1:
                    System.out.println("Wand casts the spell Leviosa!");
                    returningSpell = "Leviosa"; break;
                case 2:
                    System.out.println("Wand casts the spell Descendo!");
                    returningSpell = "Descendo"; break;
                case 3:
                    System.out.println("Wand casts the spell Accio!");
                    returningSpell = "Accio"; break;
                case 4:
                    System.out.println("Wand casts the spell Depulso!");
                    returningSpell = "Depulso"; break;
            }
        return returningSpell;
    }





/*
    public String Reverte (int willCast){
        if ( current_state != "stands still"){
            switch (willCast) {
                case 1:
                    System.out.println("Wand casts the spell Leviosa!");
                    returningSpell = "Leviosa"; break;
                case 2:
                    System.out.println("Wand casts the spell Descendo!");
                    returningSpell = "Descendo"; break;
                case 3:
                    System.out.println("Wand casts the spell Accio!");
                    returningSpell = "Accio"; break;
                case 4:
                    System.out.println("Wand casts the spell Depulso!");
                    returningSpell = "Depulso"; break;
            }

        }

        else{
            System.out.println("There wasnt any spell on the object");
        }
        return returningSpell;
    }

*/


    private String current_state;
}

class Witch{

    private MagicalCube magicalCube;
    private Wand wand;
    private SpellCommand spellCommand;

    public Witch() {
        magicalCube = new MagicalCube();
        wand = new Wand();
        spellCommand = new SpellCommand();
    }
    void create(int spell){
       // System.out.println("Please choose a spell (1 for leviosa, 2 for descendo, 3 for accio, 4 for depulso and -1 to put your wand down)");

        boolean x = true;
        String temp2 = null;

            switch (spell){
                case 1:
                    spellCommand.Leviosa() ;
                    temp2 = wand.activateSpell(1);
                    castSpell(temp2);

                    break;

                case 2:
                    spellCommand.Descendo();
                    temp2 = wand.activateSpell(2);
                    castSpell(temp2);

                    break;

                case 3:
                    spellCommand.Accio();
                    temp2 = wand.activateSpell(3);
                    castSpell(temp2);

                    break;

                case 4:
                    spellCommand.Depulso();
                    temp2 = wand.activateSpell(4);


                    break;

            }


    }

    void castSpell(String finalSpell){


            switch (finalSpell) {
                case "Leviosa":
                    magicalCube.moveUp(); break;
                case "Descendo":
                    magicalCube.moveDown();break;
                case "Accio":
                    magicalCube.moveNear();break;
                case "Depulso":
                    magicalCube.moveAway();break;
            }



    }
}





public class Test {
    public static void main(String[] args) {


        Witch Hermione_Granger = new Witch();

        Hermione_Granger.create(1);
        Hermione_Granger.create(3);

    }
}

